#include "intervalTimer.h"
#include "../switchesAndButtons/buttons.h"
#include <stdio.h>
#include "xparameters.h"
#include "xil_io.h"

#define ZERO_REG 0
#define CASC_INIT_VALUE 0x00000800
#define TIMER_NUMBER_0
#define TIMER_NUMBER_1
#define TIMER_NUMBER_2

uint32_t readTimer0Register(uint32_t offset) {
    return Xil_In32(XPAR_AXI_TIMER_0_BASEADDR + offset);
}

void writeTimer0Register(uint32_t offset, uint32_t writeValue) {
    Xil_Out32(XPAR_AXI_TIMER_0_BASEADDR + offset, writeValue);
}

uint32_t readTimer1Register(uint32_t offset) {
    return Xil_In32(XPAR_AXI_TIMER_1_BASEADDR + offset);
}

void writeTimer1Register(uint32_t offset, uint32_t writeValue) {
    Xil_Out32(XPAR_AXI_TIMER_1_BASEADDR + offset, writeValue);
}

uint64_t readTimer0Value() {
    //uint32_t upperValue = readTimer0Register()
}

intervalTimer_status_t intervalTimer_init(unsigned char timerNumber) {
    if(timerNumber < 0 || timerNumber > 2) {
        printf("You attempted to initialize a timer number outside of the accepted range");
        return INTERVAL_TIMER_STATUS_FAIL;
    }

    switch(timerNumber) {
        case TIMER_NUMBER_0:

    }


    return INTERVAL_TIMER_STATUS_OK;
}





