/*
 * simonDisplay.c
 *
 *  Created on: Oct 30, 2016
 *      Author: cdmoo
 */
#include "simonDisplay.h"
#include "supportFiles/display.h"
#include "supportFiles/utils.h"
#include <stdio.h>

#define MID_SCREEN_X DISPLAY_WIDTH / 2
#define MID_SCREEN_Y DISPLAY_HEIGHT / 2
#define BUTTON_ORIGIN_X1 (DISPLAY_WIDTH / 4 - SIMON_DISPLAY_BUTTON_WIDTH / 2)
#define BUTTON_ORIGIN_X2 (DISPLAY_WIDTH * 3 / 4 - SIMON_DISPLAY_BUTTON_WIDTH / 2)
#define BUTTON_ORIGIN_Y1 (DISPLAY_HEIGHT / 4 - SIMON_DISPLAY_BUTTON_HEIGHT / 2)
#define BUTTON_ORIGIN_Y2 (DISPLAY_HEIGHT * 3 / 4 - SIMON_DISPLAY_BUTTON_HEIGHT / 2)
#define SQUARE_ORIGIN_X1 (DISPLAY_WIDTH / 4 - SIMON_DISPLAY_SQUARE_WIDTH / 2)
#define SQUARE_ORIGIN_X2 (DISPLAY_WIDTH * 3 / 4 - SIMON_DISPLAY_SQUARE_WIDTH / 2)
#define SQUARE_ORIGIN_Y1 (DISPLAY_HEIGHT / 4 - SIMON_DISPLAY_SQUARE_HEIGHT / 2)
#define SQUARE_ORIGIN_Y2 (DISPLAY_HEIGHT * 3 / 4 - SIMON_DISPLAY_SQUARE_HEIGHT / 2)




int8_t simonDisplay_computeRegionNumber(int16_t x, int16_t y) {
    if(x < MID_SCREEN_X) {
        if(y < MID_SCREEN_Y) {
            return SIMON_DISPLAY_REGION_0;
        } else {
            return SIMON_DISPLAY_REGION_2;
        }
    } else {
        if(y < MID_SCREEN_Y) {
            return SIMON_DISPLAY_REGION_1;
        } else {
            return SIMON_DISPLAY_REGION_3;
        }
    }
}

void simonDisplay_drawButton(uint8_t regionNumber) {
    switch(regionNumber) {
        case SIMON_DISPLAY_REGION_0:
            display_fillRect(BUTTON_ORIGIN_X1, BUTTON_ORIGIN_Y1, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_RED);
            break;
        case SIMON_DISPLAY_REGION_1:
            display_fillRect(BUTTON_ORIGIN_X2, BUTTON_ORIGIN_Y1, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_YELLOW);
            break;
        case SIMON_DISPLAY_REGION_2:
            display_fillRect(BUTTON_ORIGIN_X1, BUTTON_ORIGIN_Y2, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_BLUE);
            break;
        case SIMON_DISPLAY_REGION_3:
            display_fillRect(BUTTON_ORIGIN_X2, BUTTON_ORIGIN_Y2, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_GREEN);
            break;
    }
}

void simonDisplay_drawAllButtons() {
    display_fillRect(BUTTON_ORIGIN_X1, BUTTON_ORIGIN_Y1, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_RED);
    display_fillRect(BUTTON_ORIGIN_X2, BUTTON_ORIGIN_Y1, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_YELLOW);
    display_fillRect(BUTTON_ORIGIN_X1, BUTTON_ORIGIN_Y2, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_BLUE);
    display_fillRect(BUTTON_ORIGIN_X2, BUTTON_ORIGIN_Y2, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_GREEN);
}

void simonDisplay_eraseAllButtons() {
    display_fillRect(BUTTON_ORIGIN_X1, BUTTON_ORIGIN_Y1, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_BLACK);
    display_fillRect(BUTTON_ORIGIN_X2, BUTTON_ORIGIN_Y1, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_BLACK);
    display_fillRect(BUTTON_ORIGIN_X1, BUTTON_ORIGIN_Y2, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_BLACK);
    display_fillRect(BUTTON_ORIGIN_X2, BUTTON_ORIGIN_Y2, SIMON_DISPLAY_BUTTON_WIDTH, SIMON_DISPLAY_BUTTON_HEIGHT, DISPLAY_BLACK);
}

void simonDisplay_drawSquare(uint8_t regionNo, bool erase) {
    uint16_t color;
    switch(regionNo) {
        case SIMON_DISPLAY_REGION_0:
            color = erase ? DISPLAY_BLACK : DISPLAY_RED;
            display_fillRect(SQUARE_ORIGIN_X1, SQUARE_ORIGIN_Y1, SIMON_DISPLAY_SQUARE_WIDTH, SIMON_DISPLAY_SQUARE_HEIGHT, color);
            break;
        case SIMON_DISPLAY_REGION_1:
            color = erase ? DISPLAY_BLACK : DISPLAY_YELLOW;
            display_fillRect(SQUARE_ORIGIN_X2, SQUARE_ORIGIN_Y1, SIMON_DISPLAY_SQUARE_WIDTH, SIMON_DISPLAY_SQUARE_HEIGHT, color);
            break;
        case SIMON_DISPLAY_REGION_2:
            color = erase ? DISPLAY_BLACK : DISPLAY_BLUE;
            display_fillRect(SQUARE_ORIGIN_X1, SQUARE_ORIGIN_Y2, SIMON_DISPLAY_SQUARE_WIDTH, SIMON_DISPLAY_SQUARE_HEIGHT, color);
            break;
        case SIMON_DISPLAY_REGION_3:
            color = erase ? DISPLAY_BLACK : DISPLAY_GREEN;
            display_fillRect(SQUARE_ORIGIN_X2, SQUARE_ORIGIN_Y2, SIMON_DISPLAY_SQUARE_WIDTH, SIMON_DISPLAY_SQUARE_HEIGHT, color);
            break;
    }
}





